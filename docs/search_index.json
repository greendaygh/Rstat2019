[
["index.html", "R로 배우는 기초통계 Chapter 1 Introduction 강의 개요 1.1 Goal 강의 목표 1.2 References 참고 자료 1.3 Evaluation 평가 세부 항목 1.4 Schedule 강의 계획 1.5 References 참고 자료", " R로 배우는 기초통계 한국생명공학연구원 김하성 2019-09-30 Chapter 1 Introduction 강의 개요 장소: 한국생명공학연구원 연구동 세미나실 1213호 (매주수요일 13:00~16:00) 강사: 한국생명공학연구원 바이오합성연구센터 김하성 연락처: 042-860-4372, haseong@kribb.re.kr (생명연 연구동 1143) 강의site: https://greendaygh.github.io/Rstat2019/ 1.1 Goal 강의 목표 이공계열 대학원생이 보다 쉽게 통계 이론을 습득하고 활용하는 능력을 배양하는데 주요 목적이 있음. 특히 데이터 분석용 프로그래밍언어인 R을 기반으로 한 실습을 통하여 프로그래밍 기술 습득과 함께 데이터를 다루는 능력을 배움으로써 이공계 연구에 있어서 필수인 통계적 사고의 기초를 다지는데 그 목적이 있음. 1.2 References 참고 자료 Using R for Introductory Statistics by John Verzani Free version of 1st Edition https://cran.r-project.org/doc/contrib/Verzani-SimpleR.pdf http://cbb.sjtu.edu.cn/~mywu/bi217/usingR.pdf Second edition https://www.crcpress.com/Using-R-for-Introductory-Statistics-Second-Edition/Verzani/p/book/9781466590731 R for Data Science (https://r4ds.had.co.nz, https://github.com/hadley) https://resources.rstudio.com/ 일반통계학 (영지문화사, 김우철 외) 1.3 Evaluation 평가 세부 항목 출석 50% / 과제 50% / 80점 이상 S, 80점 미만 U 부여 1.4 Schedule 강의 계획 1주차- R basics / introduction of data 2주차 - Univariate data – Summary statistics 일변량자료 (범주형, 수치형, 분포) 3주차 - Bivariate data – Correlation / Independence 이변량자료 (자료비교, 수치자료의 관계, 단순선형회귀) 4주차 - Multivariate data – R data structure 다변량자료 (다변량, R자료형, R그래픽) 5주차 - Populations – Families of distributions 모집단과 분포 6주차 - Sampling – Distribution and CLT 시뮬레이션, 샘플링 7주차 - Statistical inference 통계적 추론 8주차 - Confidence intervals 신뢰구간 9주차 - Significance test - parameteric 유의성 검정 (모수) 10주차 - Significance test – non parametric 유의성 검정 (비모수) 11주차 - Goodness of fit - parametric 적합도 검정 (모수) 12주차 - Goodness of fit – non parametirc 적합도 검정 (비모수) 13주차 - Linear regression – basics &amp; simple LR 단순회귀모형 14주차 - Multiple linear regression 다중회귀모형 15주차 - Analysis of variance 분산분석 16주차 - Logistic / Non-linear regression 로지스틱/비선형회귀모형 9/25 휴강 (강사 해외 출장) 1.5 References 참고 자료 R 홈페이지 https://www.r-project.org/ Rstudio 홈페이지 https://www.rstudio.com/ Packages for biologists https://www.bioconductor.org/ R 기본 문서들 (소개, 사용, 설치, 운영) https://cran.r-project.org/doc/manuals/r-release/R-intro.html https://cran.r-project.org/doc/manuals/r-release/R-data.html https://cran.r-project.org/doc/manuals/r-release/R-admin.html R ebooks https://bookdown.org/ Cheat Sheets https://www.rstudio.com/resources/cheatsheets/ "],
["r-basics.html", "Chapter 2 R basics 2.1 What is R / Rstudio 2.2 R / Rstudio installation 2.3 Rstudio interface 2.4 Keyboard shortcuts 2.5 R programming basics and terminology 2.6 Set working directory 2.7 R coding practice 2.8 Variables and values 2.9 Variable type of (storage) mode 2.10 Variable - Vectors 2.11 Functions 2.12 Vectorized functions 2.13 Help 2.14 RStudio workspace 2.15 R packages 2.16 Data sets 2.17 Cheatsheet", " Chapter 2 R basics 2.1 What is R / Rstudio R is a programming language that runs computations (https://www.r-project.org/) RStudio is an integrated development environment (IDE) that provides an interface for the programming (https://www.rstudio.com/) 2.2 R / Rstudio installation Install R first and then install RStudio second R Rstudio 2.3 Rstudio interface 2.4 Keyboard shortcuts 참고사이트 https://support.rstudio.com/hc/en-us/articles/200711853-Keyboard-Shortcuts Tools –&gt; Keyboard shortcut Quick Reference (Alt + Shift + K) 코드편집창 이동 (Ctrl+1) 콘솔창 이동(Ctrl+2) 한 줄 실행 (Ctrl+Enter) 주석처리 (Ctrl + Shift + C) Starting with a hashmark (‘#’), everything to the end of the line is a comment 실습 코드편집창에서 다음 입력 단축키 Ctrl + enter로 코드 실행 단축키 Ctrl + 2로 커서 콘솔창으로 이동 x값 x+y값 확인 단축키 Ctrl + 1로 코드편집창 이동 단축키 Ctrl + Shift + C 사용 # x &lt;- 10 # y &lt;- 20 2.5 R programming basics and terminology Console: 명령어 입력하는 창 Code: R 프로그래밍 변수/제어문 모음 Objects (개체, variable): 값이 (데이터) 저장되는 장소 Data types: Integers, doubles/numerics, logicals, and characters. Object (Variable) types: Vectors: 값들의 모임 combine function c() EX: c(6, 11, 13, 31, 90, 92) Factors: 범주형 데이터 저장 장소 Data frames: 2D matrix 형태 데이터 자장 장소 Conditionals (조건, 제어): if: ==, &amp; (AND), | (OR) Ex: (2 + 1 == 3) &amp; (2 + 1 == 4) for, while: 반복 수 Functions (함수, commands): 특정 일 수행, 함수이름 - 입력값 (arguments) - 출력값 (output) 으로 구성 2.6 Set working directory 시작 전 항상 작업 디렉토리 설정 예를 들어 c: 아래 새로운 디렉토리 rstat01 을 만들고 작업공간으로 설정 getwd() dir() setwd(&quot;C:\\\\rstat01&quot;) getwd() dir() 또는 아래와 같이 RStudio 메뉴 에서 설정 2.7 R coding practice 콘솔 계산기 2 + 2 ((2 – 1)^2 + (1 – 3)^2 )^(1/2) 2 + 2; 2 - 2 이전 명령: 콘솔에서 위 아래 화살표 2.8 Variables and values R is a programming language Assignment operator ( &lt;- OR = ) Valid object name &lt;- value 단축키: Alt + - (the minus sign) 내장 변수 Built-in variables x &lt;- 2 y &lt;- x^2 – 2*x + 1 y x &lt;- &quot;two&quot; some_data &lt;- 9.8 pi 변수이름 작명법 Characters (letters), numbers, “_”, “.” A and a are different symbols Names are effectively unlimited in length i_use_snake_case &lt;- 1 otherPeopleUseCamelCase &lt;- 2 some.people.use.periods &lt;- 3 And_aFew.People_RENOUNCEconvention &lt;- 4 자동 완성 기능 (Tab completion) in RStudio 2.9 Variable type of (storage) mode 2.10 Variable - Vectors Combine function c(): Concatenating elements end to end x &lt;- c(10.4, 5.6, 3.1, 6.4, 21.7) y &lt;- c(&quot;X1&quot;, &quot;Y2&quot;, &quot;X3&quot;, &quot;Y4&quot;) 인덱싱: Subsets of the elements of a vector x[1] x[1:3] x[c(1,2,4)] y[3] 2.11 Functions Function define my_sine &lt;- function(x){ y &lt;- sin(x) return(y) } Usage my_sine(pi) Terminology function name: my_sine parameter: x argument: pi return value: y Built-in functions Arguments separated by commas Tab completion x &lt;- pi sin(x) sqrt(x) log(x) log(x, 10) x &lt;- c(10, 20, 30) x + x mean(x) sum(x)/length(x) 2.12 Vectorized functions x &lt;- c(10, 20, 30) x + x sqrt(x) sin(x) log(x) x-mean(x) 2.13 Help R의 장점 중 하나 (예제 포함) ? ?mean help(&quot;mean&quot;) example(&quot;mean&quot;) help.search(&quot;mean&quot;) help(package=&quot;MASS&quot;) 2.14 RStudio workspace 2.15 R packages R comes ready loaded with various libraries of functions called packages ex) sum() is in the “base” package and sd() in the “stats” package The packages can be found in numerous server locations on the web called repositories The Comprehensive R Archive Network (CRAN) http://cran.r-project.org/web/views/ Bioconductor specialised in genomics http://www.bioconductor.org/packages/release/bioc/ UsingR package installation UsingR package loading library(UsingR) R 설치 디렉토리 R 패키지 설치 디렉토리 .libPaths() path.package() 2.16 Data sets Packages include accompanying data sets R has a datasets package that is loaded automatically The data function produces a copy of dataset in user’s workspace head(rivers) length(rivers) class(rivers) data(rivers) data(package=&quot;UsingR&quot;) library(HistData) head(Cavendish) str(Cavendish) head(Cavendish$density2) 2.17 Cheatsheet "],
["univariat-data.html", "Chapter 3 Univariat data 3.1 Introduction 3.2 Data vectors 3.3 Data type 3.4 Functions 3.5 Numeric summaries 3.6 Center 3.7 Spread 3.8 Shape 3.9 Viewing the shape 3.10 Categorical data", " Chapter 3 Univariat data 3.1 Introduction Statistics 데이터 분석을 통한 예측 - 데이터를 수집, 정리하여 이로부터 미지의 사실에 대한 신빙성 있는 추론을 수행하는 과정 Data - 사실을 나타내는 수치 맥도너 정보경제학 (1963) 지혜 (wisdom) : 패턴화된 지식 지식 (knowledge) : 가치있는 정보 정보 (information) : 의미있는 데이터 데이터 (data) : 단순한 사실의 나열 Univariate: Single variable Data collection process Case: One of several different possible items of interest Variable: Some measurement of a case Univariate data set: A set of measurements for a variable \\[ x_1, x_2, ..., x_n \\] library(UsingR) exec.pay ?exec.pay Levels of measurement Nominal (명목형) – 사람 이름 Ordinal (순서형) – 달리기 도착 순서 Interval (구간형) – 선수1, 선수2 종점통과 시간 Ratio (비율형) – 출발시간 기준 종점 통과 시간 Data type in R Numeric data types Discrete (이산형) data - 카운트, 횟수 Continuous (연속형) data - 키, 몸무게, Cannot be shared Factors data - Categories to group the data Character data - Identifiers Date and time Hierarchical data - 네트워크 구조 3.2 Data vectors Using combine function #The number of whale beachings in Texas during the 1990s whale &lt;- c(74, 122, 235, 111, 292, 111, 211, 133, 156, 79) #Object `whale` is a data vector == (univariate) data set # The size length(whale) sum(whale) sum(whale)/length(whale) mean(whale) Vectorization whale - mean(whale) whale^2 - mean(whale) sqrt(whale) Adding values to a vector variable x &lt;- 1 x &lt;- c(x, 2) x x &lt;- c(x, 3, 3, 3, 4) x Missing/NULL values NA: Not available, The value is missing NULL: a reserved value NaN: Not a number (0/0) Inf: (1/0) hip_cost &lt;- c(10500, 45000, 74100, NA, 83500) sum(hip_cost) sum(hip_cost, na.rm=TRUE) ?sum Attributes: names in data vectors head(precip) class(precip) length(precip) names(precip) order(names(precip)) test_scores &lt;- c(100, 90, 80) names(test_scores) &lt;- c(&quot;Alice&quot;, &quot;Bob&quot;, &quot;Shirley&quot;) Indexing head(precip) precip[1] precip[2:10] precip[c(1,3,5)] precip[-1] precip[&quot;Seattle Tacoma&quot;] precip[c(&quot;Seattle Tacoma&quot;, &quot;Portland&quot;)] precip[2] &lt;- 10 Functions for generating structured data 1:5 seq(1,5, by=1) seq(0, 100, by=10) seq(0, 100, length.out=11) ?seq rep(5, times10) rep(1:3, times=4) 3.3 Data type Numeric data class(1) class(pi) class(seq(1,5,by=1)) Character data ch &lt;- c(&quot;Lincoln&quot;, &quot;said&quot;, &quot;and&quot;) class(ch) Combining strings - paste function paste(&quot;X&quot;, 1:10) paste(&quot;X&quot;, 1:10, sep=&quot;&quot;) paste(&quot;The&quot;, &quot;quick&quot;, &quot;brown&quot;, &quot;fox&quot;) paste(c(&quot;The&quot;, &quot;quick&quot;, &quot;brown&quot;, &quot;fox&quot;)) paste(c(&quot;The&quot;, &quot;quick&quot;, &quot;brown&quot;, &quot;fox&quot;), collapse=&quot; &quot;) x &lt;- 1:10 paste(x) paste(x, collapse=&quot;:&quot;) Factors x &lt;- c(&quot;Red&quot;, &quot;Blue&quot;, &quot;Yellow&quot;, &quot;Green&quot;, &quot;Blue&quot;, &quot;Green&quot;) y &lt;- factor(x) y Adding a level levels(y) y[1] &lt;- &quot;Gold&quot; y levels(y) &lt;- c(levels(y), &quot;Gold&quot;) levels(y) y y[1] &lt;- &quot;Gold&quot; y Odered factors (ex. 위치 바꾸기) #library(UsingR) str(Cars93) x &lt;- Cars93$Origin plot(x) levels(x) &lt;- c(&quot;non-USA&quot;, &quot;USA&quot;) levels(x) plot(x) Logical data TRUE and FALSE “is” functions Comparison by &lt;, &lt;=, ==, !=, &gt;=, &gt; Combination by !, &amp;, | is.na(1) is.numeric(1) is.logical(TRUE) pi &lt; 3 precip &lt; 30 which(precip &lt; 30) any(precip &lt; 30) all(precip &lt; 30) any(39 == precip) which(39 == precip) sum(precip &lt; 30) sum(c(TRUE, TRUE)) x &lt;- Cars93$Origin x == &quot;USA&quot; which(x == &quot;USA&quot;) i &lt;- which(x == &quot;USA&quot;) x[i] x &lt;- 1:100 x &lt; 10 x &gt; 90 x &lt; 10 | x &gt;90 which(x &lt; 10 | x &gt;90) i &lt;- which(x &lt; 10 | x &gt;90) x[i] x[x &lt; 10 | x &gt;90] Date and time Unixtime, POSIX time 1970년 1월 1일 00:00:00 협정 세계시(UTC) 부터의 경과 시간을 초로 환산 32비트로 표현된 유닉스 시간은 1970년 1월 1일 00:00 (UTC)에서 2,147,483,647 (231 - 1) 지난 후인 2038년 1월 19일 03:14:08 UTC에 2038년 문제를 발생시킨다. 이는 산술 오버플로와 관련 있는 문제이다. –wiki- library(lubridate) current_time &lt;- now() # record since 1970 as.numeric(current_time) as.numeric(now()) month(current_time) 3.3.1 Example - Recoding values 다음은 신생아들의 키를 나타내는 data set 이다. 오류 값을 찾아내고 이들 값을 NA로 바꾼 후 평균 값을 구하라. x &lt;- babies$dwt x 3.3.2 Example - Average distance from center \\[\\begin{equation} (| x_1 - \\bar{x} | + |x_2 - \\bar{x}| + ... + |x_n - \\bar{x}| )/n \\end{equation}\\] x &lt;- rivers 3.4 Functions Define a function my_mean &lt;- function(x){ total &lt;- sum(x) n &lt;- length(x) return(total/n) } Write a function named get_dist for the example 3.3.2, and use it for the rivers data get_dist &lt;- function(x){ return() } 3.5 Numeric summaries 대푯값 Center – commonly known as “average” or “mean” but not the only one. median, mode, etc Spread – Variability of a data set. No variability – mean is everything Large variability – mean informs much less confidence of interpretation from knowing center Distance from center Shape – Degree of interpretation from knowing center and spread. eg. bell shape – two sides are equally likely, large values are rather unlikely and values tend to cluster near the center. 3.6 Center 3.6.1 Sample mean \\[ \\bar{x} = \\frac{1}{n} (x_1 + x_2 + ... + x_n) = \\frac{1}{n}\\sum_i{x_i} \\] head(kid.weights) str(kid.weights) wts &lt;- kid.weights$weight length(wts) plot(wts) mean(wts) devs &lt;- wts – mean(wts) # deviation, centering plot(wts) mean(wts) Trimmed mean mean(wts) wts[wts&lt;120] mean(wts[wts&lt;=120]) mean(wts, trim=0.8) 3.6.2 Measure of Position _p_th Quantile - 특정 값으로 이 값보다 작은 데이터의 비율이 100∙p 퍼센트, 큰 데이터의 비율은 100∙(1- p) 퍼센트 Median - Splits the data in half p=0.5 Percentiles - The same as quantile but its scale is 0 to 100 x &lt;- 0:5 length(x) quantile(x, 0.25) median(x) quantile(x, seq(0, 1, by=0.2)) quantile(x) Robustness mean(wts) median(wts) plot(wts) abline(h=mean(wts), col=&quot;red&quot;) abline(h=median(wts), col=&quot;blue&quot;) wts2 &lt;- wts[wts&lt;120] abline(h=mean(wts2), col=&quot;red&quot;, lty=2) Boxplot x &lt;- 0:5 quantile(x) boxplot(x) text(x=1.3, y=quantile(x, 0.25), labels = &quot;1사분위수&quot;) text(x=1.3, y=quantile(x, 0.5), labels = &quot;2사분위수&quot;) text(x=1.3, y=quantile(x, 0.75), labels = &quot;3사분위수&quot;) 3.7 Spread Range - the distance between the smallest and largest values Sample variance Distance - \\[ d_i = x_i - \\bar{x} \\] \\[\\begin{equation} s^2 = \\frac{1}{n-1}\\sum_i(x_i - \\bar{x})^2 \\end{equation}\\] Sample standard deviation 측정값들이 평균에서 떨어진 정도 \\[\\begin{equation} \\sqrt{s^2} = sqrt{ \\frac{1}{n-1}\\sum_i(x_i - \\bar{x})^2 } \\end{equation}\\] wts &lt;- kid.weights$weight var(wts) sd(wts) plot(wts) boxplot(wts) hist(wts) hist(wts, breaks = 50) hist(wts, 50) abline(v=mean(wts), col=&quot;red&quot;) z-score How big (small) is the value relative to the others \\(z=3\\) 이 값은 평균에 비해 3 표준편차만큼 크다 \\[\\begin{equation} z_i = \\frac{x_i - \\bar{x}}{s} \\end{equation}\\] Example - z score wts의 z 값을 구하는 함수를 만들고 histogram을 그리시오 wts &lt;- kid.weights$weight Interquartile range (IQR) Middle 50% of the data Difference between Q3 and Q1 Example - IQR wts 변수 값들의 IQR 을 구하시오 wts &lt;- kid.weights$weight 3.8 Shape Symmetry and skew \\[\\begin{equation} sample skewness = \\sqrt{n} \\frac{\\sum{(x_i - \\bar{x})^2}}{(\\sum{(x_i - \\bar{x})^2)^{3/2}}} = \\frac{1}{n}\\sum{z_i^3} \\end{equation}\\] myskew &lt;- function(x){ n &lt;- length(x) z &lt;- (x-mean(x))/sd(x) return(sum(z^3)/n) } wts &lt;- kid.weights$weight hist(wts, 50) myskew(wts) z &lt;- rnorm(length(wts)) hist(z, br=50) myskew(z) Sample excess kurtosis Measure of tails \\[\\begin{equation} sample excess kurtosis = n \\frac{\\sum{(x_i - \\bar{x})^4}}{(\\sum{(x_i - \\bar{x})^2)^2}} -3 = \\frac{1}{n}\\sum{z_i^4} - 3 \\end{equation}\\] mykurtosis &lt;- function(x){ n &lt;- length(x) z &lt;- (x-mean(x))/sd(x) return(sum(z^4)/n - 3) } wts &lt;- kid.weights$weight hist(wts, 50) mykurtosis(wts) z &lt;- rnorm(length(wts)) hist(z, br=50) mykurtosis(z) 3.9 Viewing the shape Dot plots – Trouble with repeated values, only used for small data sets Stem and leaf plot – Shows range, median, shape. But only for small data sets. trouble with clustered data. Rounding Histogram – Break up an interval, for each subinterval the number of data points are counted Density plots wts &lt;- kid.weights$weight xrange &lt;- range(wts) den &lt;- density(wts) plot(den, xlim=xrange, xlab=&quot;densities&quot;, main=&quot;&quot;) Boxplots It shows center, spread, shape Five-number summary of a univariate data set: min, max, Q1, Q3, and median These are good summary of even very large data sets. Outliers – 1.5 x IQR 3.10 Categorical data Tabulating data x &lt;- babies$smoke x &lt;- factor(x, labels=c(&quot;never&quot;, &quot;now&quot;, &quot;until current&quot;, &quot;once, quit&quot;, &quot;unknown&quot;)) table(x) out &lt;- table(x) prop &lt;- 100*out/sum(out) round(prop, digits=2) barplot(out) barplot(prop) dotplot(out) dotplot(prop) pie(out) "],
["bivariate-data.html", "Chapter 4 Bivariate data 4.1 Introduction 4.2 Data manipulation 4.3 Paired data 4.4 Bivariate categorical data 4.5 Homeworks", " Chapter 4 Bivariate data 4.1 Introduction 본 단원에서는 두 변수를 동시에 고려할 경우 각 변수가 가지고 있는 데이터를 비교하여 변수간의 유사성이나 관계 (상관, 독립)에 대한 설명하는 방법을 소개하며 짝데이터 (Paired data)나 범주형 데이터의 경우에 두 변수의 관계를 어떻게 설명하는지 알아봅니다. 또한 그래프를 이용하여 두 변수의 관계를 가시화 하는 방법에 대해 알아보겠습니다. 4.1.1 Independence samples 위 그림은 두 변수간 (x, y축) 관계를 산점도와 marginal histogram을 이용하여 비교한 그림 입니다. Marginal histogram은 두 그래프가 비슷한 모양을 하고 있지만 왼쪽 그림은 두 변수간 강한 양의 상관관계를 보여주고 있으며 오른쪽은 두 변수가 아무런 관계도 아닌 독립임을 보여줍니다. 두 변수간의 관계를 설명할 때 가장 일반적인 경우의 데이터 형태는 코흐트 데이터 입니다. 처리군과 대조군으로 이루어진 데이터를 말하며 플라시보 (Placebo effect) 효과를 방지하기 위해서 실제 효과는 없지만 대조군에 처리한 조건과 동일한 조건의 처리를 수행합니다. beets &lt;- c(41, 40, 41, 42, 44, 35, 41, 36, 47, 45) no_beets &lt;- c(51, 51, 50, 42, 40, 31, 43, 45) 위 데이터는 비트의 효과를 검증하기 위해 각 실험자의 달리는 시간을 측정하고 비교한 데이터 입니다. 이 데이터를 보고 알 수 있는 사실은 무엇이 있을까요? 우리가 앞서 단원에서 대푯값을 배웠으니 이를 고려해서 질문을 다시 생각해 봅시다. 가장 오래 달린 세 명이 no beet 그룹에 있음 가장 적게 달린 한 사람이 beet 그룹에 있음 center, spread 또는 shape가 유사한가? 이 후 단원에서 randomness가 가정된 상태에서 위 질문들에 대한 해답을 찾는 과정을 배우게 될 것입니다. 4.1.2 plot 두 변수에 대한 관계를 가장 먼저 그리고 가장 직관적으로 설명하는 방법은 그래프 입니다. 줄기잎 차트나 dot-plot 등은 많이 쓰이지 않으나 boxplot과 산점도는 (dot-plot) 데이터 분석을 수행하기 전에 변수들간의 관계를 대략적으로 가늠해 볼 수 있기 때문에 많이 사용되고 있습니다. dotchart(c(beets, no_beets)) dotchart(c(beets, no_beets), groups=factor(c(rep(&quot;beets&quot;, length(beets)), rep(&quot;no_beets&quot;, length(no_beets))))) boxplot에서는 대략 다섯 가지 대표값을 볼 수 있습니다. 1사분위수, 2사분위수(중간값), 3사분위수, 그리고 최대, 최소값입니다. 여기서 최대 최소는 IQR 1.5배에 해당하는 하위 또는 상위 값으로 그 범위를 벗어나는 값들은 outlier로 취급합니다. boxplot(beets, no_beets) boxplot(beets, no_beets, names=c(&quot;beets&quot;, &quot;no_beets&quot;)) Density plot은 histogram과 비슷하게 데이터의 center, spread, 그리고 shape를 모두 보여주는 높은 활용도 때문에 많이 사용되는 그래프 입니다. 지난 시간 R의 density 함수를 활용하여 그리는 방법을 간단히 알아본 바와 같이 density 함수는 밀도함수를 추정하고 주어진 범위의 x값과 그에 대한 y값을 반환해주며 plot 함수를 이용하여 x와 y위치에 점이나 선을 그려주어 그래프를 완성합니다. d4 &lt;- density(fourth) d5 &lt;- density(fifth) xrange &lt;- range(c(d4$x, d5$x)) yrange &lt;- range(c(d4$y, d5$y)) plot(d4, xlim=xrange, ylim=yrange, xlab=&quot;densities&quot;, main=&quot;&quot;) lines(d5, lty=2) legend(650, 0.008, legend=c(&quot;Fourth&quot;, &quot;Fifth&quot;), lty=c(1,2)) QQplot은 두 변수가 갖는 데이터의 Quantile 값을 비교하는 그래프로 R의 qqplot 함수를 사용합니다. qqplot(fourth, fifth) ps &lt;- seq(0.05, 0.95, by=0.05) x &lt;- quantile(fourth, ps) y &lt;- quantile(fifth, ps) plot(x, y) 4.2 Data manipulation 4.2.1 List R언어에서 두 변수를 담을 수 있는 데이터 타입은 list와 data frame 두 종류가 있습니다. list 변수 타입은 vector 형태의 여러개의 element를 가질 수 있으며 각 element의 데이터는 문자나 숫자 어떤 데이터 타입도 가능하며 각 element vector의 길이가 모두 달라도 됩니다. list의 인덱싱에서 [ ]는 리스트를 반환하고 [[ ]]는 vector element들을 반환합니다. b &lt;- list(beets = beets, &quot;no beets&quot;=no_beets) b$beets b[1] b[[1]] class(b[1]) class(b[[1]]) boxplot(b) 4.2.2 Data frame data.frame 타입 변수는 list와 같은 기능의 타입으로 볼 수 있지만 모든 element 들이 같은 길이를 갖는다는 것이 다릅니다. 따라서 2차원 메트릭스 형태로 표현될 수 있으며 matrix와 같이 [가로, 세로] 방식으로 인덱싱 할 수 있습니다. 각 row는 샘플을 나타내고 column은 하나의 변수를 타나냅니다. R 기반의 데이터 분석에서는 가장 선호되는 데이터 타입이라고 볼 수 있습니다. id &lt;- 1:10 name &lt;- paste(&quot;Name&quot;, id, sep=&quot;&quot;) grade &lt;- LETTERS[sample(1:5, size=length(id), replace=T)] student &lt;- data.frame(id, name, grade) student class(id) class(name) class(grade) class(student) class(student[,1]) class(student[,3]) student &lt;- data.frame(id, name, grade, stringsAsFactors = F) 4.2.3 Model formulas R에서는 두 변수의 관계를 수학적으로 표현하기 위한 방법을 제공하며 다양한 모형에서 공통적으로 사용될 수 있습니다. \\[ response(s) \\sim predictor(s) \\] head(michelson) beets no_beets runtime &lt;- c(beets, no_beets) nitrate &lt;- c(rep(&quot;beets&quot;, length(beets)), rep(&quot;nobeets&quot;, length(no_beets))) food.sports &lt;- data.frame(runtime, nitrate) boxplot(runtime~nitrate, data=food.sports) boxplot(michelson$Speed ~ michelson$Expt) boxplot(Speed ~ Expt, data=michelson) Generic function of plot formula type \\(x \\sim f\\)  side-by-side boxplots with groups$ $f How x varies across the group f plot(Speed ~ Expt, data=michelson) out &lt;- summary(Speed ~ Expt, data=michelson) plot(out) plot(michelson$Speed) plot(michelson$Speed, main=&quot;Speed&quot;, ylab=&quot;Speed&quot;, bty=&quot;l&quot;, pch=&quot;*&quot;, cex=2, col=&quot;red&quot;) ?pch Stack 함수는 관측 값을 하나의 벡터로 만들고 각 벡터의 라벨을 또 하나의 벡터로 만들어서 합해주는 기능을 수행합니다. 이는 다음에 배울 reshape2 패키지의 melt 와 비슷한 기능을 하고 있습니다. Split 함수의 경우 data를 정의된 그룹으로 나누고 list 타입으로 반환해줍니다. 그룹은 factor 형으로 정의된 변수에 저장되어 있어야 하며 b &lt;- list(&quot;beets&quot; = beets, &quot;no beets&quot; = no_beets) stacked &lt;- stack(b) plot(values ~ ind, data=stacked) ?split speeds &lt;- split(michelson$Speed, michelson$Expt) names(speeds) &lt;- paste(&quot;Expt&quot;, 1:5, sep=&quot;&quot;) speeds speed &lt;- michelson$Speed expt &lt;- michelson$Expt speed expt speeds &lt;- list(speed[expt==1], speed[expt==2], speed[expt==3], speed[expt==4], speed[expt==5]) names(speeds) &lt;- paste(&quot;Expt&quot;, 1:5, sep=&quot;&quot;) speeds 4.2.4 Example 3-1 다음 데이터를 list 타입의 변수를 이용해서 저장하시오 marsha: 25, 0, 45, 90, 0 bill: 30, 30, 30, 30 holly: 15, 0, 90, 0 Hmisc 패키지를 읽고 michelson 데이터를 Speed ~ Expt model formular 를 사용해서 어떤 ouput이 나오는지 설명하시오 library(Hmisc) michelson summary(Speed~Expt, michelson) twins 데이터에서 Foster와 Biological 데이터에 대한 boxplot을 그리고 두 데이터의 center와 spread를 비교하시오 4.3 Paired data paired data는 두 종류의 변수에 대한 데이터를 하나의 샘플로 부터 얻을 때의 데이터를 말합니다. 본 단원에서 두 변수의 데이터형은 연속형과 연속형, 또는 연속형과 범주형의 경우로 다음 단원에서 범주형과 범주형에 대한 경우의 두 변수간 관계를 설명하겠습니다. 예를 들어 한 학생으로부터 얻어진 키와 몸무게 데이터가 paired data가 될 수 있습니다. paired data는 보통 다음과 같은 형태를 취하고 있습니다. \\[ (x_1, y_1), (x_2, y_2), ..., (x_{252}, y_{252}) \\] 걸리버 여행기라는 (1726) 소설이 나올 무렵의 사람들은 손목과 목, 허리 둘래가 항상 일정 비율로 비례하는 것을 알고 있었는데 이를 Lilliputians’ hypothesis라고 합니다. 이를 fat 데이터를 통해 알아 봅니다. UsingR 패키지의 fat 데이터는 252명의 남성으로부터 얻어진 다른 신체 부위의 측정 값을 제공하고 있으며 fat index를 예측하기 위한 목적으로 사용될 수 있습니다. 본 강의에서는 neck과 wrist 두 변수간의 관계를 설명하기 위한 데이터로 사용됩니다. library(UsingR) class(fat) head(fat) names(fat) neck_pair &lt;- fat$neck wrist_pair &lt;- fat$wrist mean(neck_pair/wrist_pair) mean(neck_pair)/mean(wrist_pair) plot(neck_pair, wrist_pair) 손목과 목 둘레를 측정한 데이터의 대표값 (평군)을 이용하여 두 변수 사이의 비율을 계산해 보면 2.084로 거의 두 배의 비율을 보입니다. 짝 데이터가 아닌 경우의 비율은 어떻게 될지 계산해 보면 아래와 같이 2.08로 비슷한 값이 구해집니다. 그러나 plot을 사용해서 산점도를 그려보면 nopair 데이터의 경우 두 변수의 상관성이 사라지는 것을 알 수 있습니다. neck_nopair &lt;-sample(fat$neck) wrist_nopair &lt;- sample(fat$wrist) mean(neck_nopair)/mean(wrist_nopair) mean(neck_nopair/wrist_nopair) plot(neck_nopair, wrist_nopair) 4.3.1 Pearson Correlation 상관 또는 상관계수는 두 변수의 선형적 관계를 정량적으로 나타내는 척도입니다. 상관계수의 값이 0일 경우 두 변수는 독립 (independence)이라고 할 수 있고 선형 관계에 대해서만 사용됩니다. x &lt;- fat$wrist y &lt;- fat$neck plot(x, y) abline(v = mean(x), lty=2) abline(h = mean(y), lty=2) points(mean(x), mean(y), pch=16, cex=4, col=&quot;#00000055&quot;) abline(lm(y~x)) 공분산 (covariance)와 상관 (correlation)은 데이터의 중앙을 기준으로 4개의 구역에 각 데이터가 흩어진 정도를 정량화 한 것이며 다음과 같이 정의됩니다. \\[ cov(x, y) = \\frac{1}{n-1} \\sum{(x_i-\\bar{x})(y_i-\\bar{y})} \\] \\[ cor(x, y) = \\frac{1}{n-1} \\sum{(\\frac{x_i-\\bar{x}}{s_x})(\\frac{y_i-\\bar{y}}{s_y})} = cov(x,y)/(s_x s_y)\\] cor(fat$wrist, fat$neck) cor(fat$wrist, fat$height) cor(fat$age, fat$ankle) 4.3.2 Spearman correlation coefficient 피어슨 상관계수는 선형적 관계에 대한 정량화만 가능한 반면 spearman 상관계수는 선형관계 뿐만 아니라 비선형 적인 관계에 대해서도 단조 증가나 감소에 대한 정보를 측정할 수 있는 measure 입니다. 이는 데이터의 값 자체를 사용하기 보다는 데이터를 rank 값으로 변환한 후 상관성을 비교하기 때문에 가능한 기능입니다. from wiki x &lt;- Animals$body y &lt;- Animals$brain cor(x, y) plot(x, y) Animals cor(rank(x), rank(y)) cor(x, y, method=&quot;spearman&quot;) Animals 데이터에서 correlation 값이 낮은 이유는 공룡과 같이 뇌 무게에 비해 비정상적으로 큰 몸무게 값을 갖는 개체들 때문입니다. Example: 공룡을 제외한 correlation을 구하시오 일반적으로 분석의 신뢰성을 높이기 위해 실험 반복을 통해 데이터를 수집합니다. 그런데 가끔은 전체 반복 데이터를 모두 사용해서 상관계수를 구하는 값보다 각 반복 데이터의 평균에 대한 상관 계수를 구랗 때 더 높은 상관 관계를 확인할 수 있습니다. ToothGrowth plot(ToothGrowth$dose, ToothGrowth$len) cor(ToothGrowth$dose, ToothGrowth$len) l &lt;- split(ToothGrowth$len, ToothGrowth$dose) group_means &lt;- c(mean(l[[1]]), mean(l[[2]]), mean(l[[3]])) points(c(0.5, 1, 2), group_means, col=&quot;red&quot;, pch=17, cex=2) cor(c(0.5, 1, 2), group_means) 4.3.3 Correlation, causation and association 상관성 분석 중 유의할 점 중 하나는 상관성이 인과 관계를 의미하지 않는 다는 점 입니다. Smoking vs. cancer (1950) 연구의 경우 폐암 발병의 원인으로 담배에 대한 입장이 Industry 입장에서의 견해와 health care researchers 입장에서 견해가 다를 수 있습니다. Lurking variables 또는 compounding effect라고 불리우는 효과는 원인과 결과가 되는 두 요소에 모두 상관성을 갖는 변수로서 당시 담배가 폐암에 원인인지 아닌지에 대한 논란을 일으켰습니다. Simpson’s paradox 현상은 전체 데이터의 상관성이 하위 그룹별로 고려한 상관성과 반대가 되는 경우를 말합니다. cor(SAT$salary, SAT$total) plot(salary~total, data=SAT, cex=2) points(salary~total, SAT, subset = perc &lt; 10, col=&quot;red&quot;, pch=15, cex=2) points(salary~total, SAT, subset = perc &gt; 40, col=&quot;blue&quot;, pch=16, cex=2) abline(lm(SAT$salary~SAT$total)) abline(lm(salary~total, SAT, subset = perc &lt; 10), col=&quot;red&quot;) abline(lm(salary~total, SAT, subset = perc &gt; 40), col=&quot;blue&quot;) 반응변수 y와 설명변수 x의 관계는 다음 그림과 같은 경우의 수를 생각할 수 있습니다. UsingR 직접적 원인에 의한 결과를 설명하는 인과관계로 설명이 어렬울 경우 좀 더 넓은 범위의 연관성(Association) 으로 두 변수가 관련이 있음을 표현하는 것도 하나의 방법입니다. 1996년 오스트레일리아의 총기 소유자들에게 총기를 다시 사들이는 정부 정책과 자살율에 관한 연구가 그 예제 입니다. 4.3.4 Trends 앞서 상관계수는 두 (연속형) 변수간의 관계를 나타내는 척도라고 설명을 했습니다. 하나의 변수는 연속형이고 다른 변수가 범주형 변수일 경우에도 각 범주형 변수의 그룹이 값는 평균값을 비교하여 관계를 유추할 수 있습니다. 즉, 각 그룹의 평균값들을 선으로 연결하였을 때 그 기울기가 일정하면 그룹의 변화에 따른 반응값이 선형적으로 일정한 관계에 있다고 해석할 수 있습니다. 선형적 트렌드는 다음과 같은 모형으로 나타낼 수 있습니다. \\[ \\mu_{y|x} = \\beta_0 + \\beta_1 x \\] where $ _{y|x} $ 는 설명변수 \\(x\\) 가 주어진 상태에서 반응변수의 평균으로 볼 수 있습니다. 각 데이터포인트의 경우 \\[y_i = \\beta_0 + \\beta_1 x_i + \\e_i\\] 이며 \\(\\e_i\\)는 에러를 나타냅니다. \\(\\beta\\) 값들은 알 수 없지만 0일 경우 \\(y\\) 값은 항상 일정하고 에러의 평균은 0이 됨을 가정하고 있습니다. 이제 \\(\\beta\\)가 0인지 아닌지를 계산하면 두 변수가 연관이 있는지에 대한 판단을 할 수 있습니다. \\(\\beta\\)를 구하기 전에 우선 error, residual, 그리고 bias 에 대한 념을 정확히 알아두는 것이 좋습니다. 4.3.5 The method of least squares 정의에 의해서 잔차는 다음과 같습니다. 즉 잔차는 관측값에서 추정된값과의 차이입니다. \\[ \\hat{y}_i = b_0 + b_1 x_i \\] \\[ residual = y_i - \\hat{y}_i \\] - \\[\\beta\\] 값은 최소제곱추정법이라는 방법으로 구할 수 있는데 이 방법은 각 점에서의 잔차를 최소화 하는 선분을 (회귀선) 구하는 과정이며 \\[\\beta\\]는 해당 선분의 기울이로 볼 수 있습니다. 즉, 추정에 의해서 구해진 회귀선은 squared residual을 최소화 하는 선분이라고 해석할 수 있습니다. 선분 \\[ \\hat{y} = \\hat{beta}_0 + \\hat{\\beta}_1 x \\]의 최소 제곱법에 의한 \\[\\beta_0\\]와 \\[\\beta_1\\]의 추정값 \\[\\hat{beta}_0\\]와 \\[\\hat{beta}_1\\]은 다음과 같이 정의 됩니다. \\[ \\hat{\\beta}_1 = \\frac{\\sum(x_i - \\bar{x})(y_i-\\bar{y})}{\\sum(x_i - \\bar{x})^2} = cor(x,y)\\frac{s_y}{s_x}\\] \\[ \\hat{\\beta}_0 = \\hat{y} - \\hat{\\beta}_1 x \\] 위 두 식에서 회귀선분의 기울기인 \\(\\hat{\\beta}_1\\)은 상관계수에 \\(\\frac{s_y}{s_x}\\)를 곱한 수로 1만큼 x 축으로 변할 때 변화하는 y 값의 평균 변화량으로 해석하면 되겠습니다. 또한 상관계수와는 달리 설명변수와 반응변수 x, y가 바뀔경우 값이 달라지며 여전히 잔차의 합은 0가 됩니다. R에서는 다음과 같이 lm 함수를 사용하며 이 함수에 대한 더 자세한 내용은 11장에서 다시 배우게 되겠습니다. ?lm out &lt;- lm(maxrate ~ age, data=heartrate) out ## visualize fitted line names(out) summary(out) plot(maxrate ~ age, data=heartrate) abline(out) ## residuals sum(resid(out)) sum(out$residuals) res &lt;- heartrate$maxrate - out$fitted.values sum(res) ## fitted values age &lt;- c(30, 40) out$coefficients[1] + out$coefficients[2]*age predict(out, data.frame(age)) head(heartrate) predict(out, data.frame(age=30)) Example: fit 데이터에서 abdomen 과 wrist의 산점도를 그리고 선형모형을 적합한 후 추세선을 그리시오. 17cm wrist 크기를 갖는 사람은 얼마의 abdomen의 값을 가질지 예측하시오. https://stats.stackexchange.com/questions/371747/association-relationship-and-correlation 4.4 Bivariate categorical data 이번 단원에서는 두 종류의 짝데이터가 모두 범주형일 경우에 그 연관성을 정량화하는 방법에 대해서 알아보겠습니다. 4.4.1 Contingency tables 일반적으로 범주형 데이터는 각 샘플의 그룹 정보를 표시하여 나타내며 분석을 위해서는 이러한 그룹 정보를 기준으로 각 그룹에 해당하는 샘플의 갯수를 카운팅하여 contingency table로 변환하여 분석을 수행하게 됩니다. 두 범주형 변수의 경우는 two-way contingency table로 나타낼 수 있습니다. R에서는 다음과 같은 다양한 방법으로 테이블을 만듭니다. rbind(c(56,8), c(2,16)) cbind(c(56,2), c(8,16)) seatbelts &lt;- matrix(c(56, 2, 8, 16), nrow=2) rownames(seatbelts) &lt;- c(&quot;buckled&quot;,&quot;unbuckled&quot;) colnames(seatbelts) &lt;- c(&quot;buckled&quot;,&quot;unbuckled&quot;) seatbelts rownames(seatbelts) &lt;- c(&quot;pa_buckled&quot;,&quot;pa_unbuckled&quot;) colnames(seatbelts) &lt;- c(&quot;ch_buckled&quot;,&quot;ch_unbuckled&quot;) seatbelts dimnames(seatbelts) &lt;- list(parent=c(&quot;buckled&quot;,&quot;unbuckled&quot;), child=c(&quot;buckled&quot;,&quot;unbuckled&quot;)) seatbelts head(grades) str(grades) mytbl &lt;- table(grades$prev, grades$grade) 4.4.2 Marginal distributions 연관성을 정량화 하기 전에 알아야할 두 가지 개념 중 하나는 주변분포 (marginal distribution)이고 다른 하나는 조건부분포 (conditional distributoin) 입니다. two-way 테이블은 두 개의 변수에 대한 요약 정보를 나타내며 각 변수들의 분표를 독립적으로 정량화 한 경우를 주변분포라고 합니다. R에서는 colSums, rowSums 또는 margin.table을 이용하여 계산 할 수 있습니다. mytbl rowSums(mytbl) margin.table(mytbl, margin=1) colSums(mytbl) margin.table(mytbl, margin=2) 4.4.3 Conditional distributions 조건부 확률은 위 분할표 (contingency table)의 하나의 row에 대해서 다른 row와 비교하는 경우를 생각하면 됩니다. 즉 위 안전벨트 데이터에서 부모가 벨트를 맬 경우와 매지 않을 경우 각각에 대한 아이들의 벨트 착용 비율을 말합니다. \\[ p(C=b|P=b) = \\frac{p(C=b, P=b)}{p(P=b)} \\] R에서는 Marginal 분포 값으로 각 해당하는 cell의 값을 나누어 비율을 계산할 수 있습니다. Seatbelt 데이터의 경우 부모가 벨트를 착용할 경우 아이들이 착용하는 비율이 0.875이고 부모가 착용하지 않을 때 아이들이 착용하는 비율은 0.11로 차이가 보임을 알 수 있습니다. prop.table(seatbelts) seatbelts/sum(seatbelts) prop.table(seatbelts, margin=1) prop.table(seatbelts, margin=2) R 이 제공하는 xtabs 함수를 사용하면 위와 같은 계산을 쉽게 할 수 있습니다. 다음 Fingerprints 데이터는 whorls 와 Loops의 갯수의 조합에 해당하는 사람들의 수를 세어놓은 데이터입니다. NA를 제외하고 테이블을 만들기 위해서는 각 카테고리별로 테이블을 나누고 해당 cell에 맞는 값을 할당하는 복잡한 과정이 필요하지만 xtabs 함수를 사용하면 위 과정을 쉽게 수행할 수 있습니다. head(Fingerprints) tail(Fingerprints) ## without xtabs idx &lt;- !is.na(Fingerprints$count) Fingerprints[idx,] whorls &lt;- rep(Fingerprints$Whorls[idx], Fingerprints$count[idx]) loops &lt;- rep(Fingerprints$Loops[idx], Fingerprints$count[idx]) table(whorls, loops) ## with xtabs xtabs(count ~ Whorls + Loops, Fingerprints) xtabs(count ~ ., Fingerprints) 4.4.4 Graphical summaries of contingency tables 테이블 데이터를 가시화 하는 가장 쉬운 방법은 barplot 함수를 이용하는 것 입니다. barplot(seatbelts) barplot(seatbelts, beside=T) barplot(seatbelts, beside=T, legend=rownames(seatbelts)) barplot(seatbelts, beside=T, legend=rownames(seatbelts), col=c(&quot;red&quot;, &quot;blue&quot;)) mosaic plot은 barplot을 확장한 개념이나 실제 많이 쓰이진 않습니다. titanic 예제는 타이타닉호에 탑승했던 승객들의 객실 등급과 생존 유무 등을 정리해 놓은 데이터셋 입니다. mosaic plot을 통해서 Sex와 Survived 의 관계를 관측할 수 있으며 이를 확장하여 Class에 대한 분류를 더 하여 정보를 비교할 수 있습니다. titanic &lt;- as.data.frame(Titanic) head(titanic) xtabs(Freq ~ Survived + Class, data=titanic, subset=Sex==&quot;Female&quot;) xtabs(Freq ~ Survived + Class, data=titanic) xtabs(Freq ~ Sex, titanic) tbl &lt;- xtabs(Freq ~ Sex + Survived, titanic) mosaicplot(tbl) tbl &lt;- xtabs(Freq ~ Sex + Survived + Class, titanic) mosaicplot(tbl) 4.4.5 Measures of association for categorical data 타이타닉 데이터에서 객실 등급과 생존율의 그룹별 사람수를 보면 다음과 같이 등급별로 생존 비율이 크게 다른 패턴을 가짐을 알 수 있습니다. 이는 두 변수가 서로 상관되어 있음을 의미하는데 비록 이 변수들이 숫자형 변수는 아니지만 자연스럽게 그룹별로 정렬될 수 있고 따라서 그룹별 비율을 비교하므로써 상관성에 대한 유무를 판단할 수 있습니다. mosaicplot(xtabs(Freq ~ Class + Survived, data=titanic)) Kendal tau correlation은 concordant/discordant pair를 이용한 정량적 연관성 측정값으로 다음과 같이 계산 할 수 있습니다. 특정 관측 데이터 pair (x1, y1)과 (x2, y2)가 있을 때 x1과 y1이 x2, y2에 비해서 둘 다 높은 (또는 낮은) rank에 위치할 경우 concordant 하다고 하며 반대로 x2 또는 y2 둘 중 하나는 높으나 다른 하나는 낮은 또는 그 반대인 경우 discordant 한 것으로 정의 됩니다. 피어슨 상관성과 같은 -1부터 1사이의 값을 가지며 0은 연관이 전혀 없는 경우를 말합니다. \\[ \\tau = \\frac{# of concordant pair - # of discordant pair}{n(n-1)/2} \\] The chi-squared statistics 는 가장 널리 쓰이는 범주형 자료의 연관성 척도로 다음과 같이 정의됩니다. 수식의 “o”와 “e”는 각각 관측값과 예측값을 나타냅니다. 이 값이 클 경우 연관이 크다는 것이고 크고 작음에 대한 검증은 10장에서 다시 다루기로 합니다. \\[ chi-squared statistic = \\sum \\frac{(f_o - f_e)^2}{f_e} \\] 다음 seatbelt 데이터에서 괄호를 채우시오. hint: 만약 부모와 아이들의 안전벨트를 매는 두 사건 (변수)가 독립이라면 \\(p(C, P) == p(C)p(P)\\) 즉, 결합확률이 각 확률을 곱한 것과 같고 기대값은 확률 x 전체 사건의 수 이므로 다시 적으면 \\(N p(C,P) == N p(C)p(P)\\) 이고 여기서 \\(N p(C,P)\\)는 우리가 관측한 값으로 볼 수 있고 \\(N p(C) p(P)\\)는 독립을 가정한 상태에서 기대값이라고 볼 수 있음. fo &lt;- tbl fo ## marginal probability margin_rows &lt;- rowSums(fo)/sum(fo) margin_cols &lt;- colSums(fo)/sum(fo) ## expected numbers sum(fo)*margin_rows[?]*margin_cols[?] sum(fo)*margin_rows[?]*margin_cols[?] sum(fo)*margin_rows[?]*margin_cols[?] sum(fo)*margin_rows[?]*margin_cols[?] ## use chisq.test function fe &lt;- chisq.test(tbl)$expected (fo-fe)^2 / fe sum((fo-fe)^2 / fe) 4.5 Homeworks 각 문제의 풀이는 R 코드와 같이 haseong@kribb.re.kr 로 다음 강의시간 전까지 보내주시면 되겠습니다. 4.5.1 HW3-1 다음 데이터를 age 변수에 저장하고 mean, median, variance 를 구하시오 {7, 9, 2, 64, 41, 60, 82, 31, 38, 25, 52, 68, 67} 위 age 데이터를 z-score로 변환 하고 zage 변수에 저장하시오 age와 zage 두 데이터셋에 대한 각각의 boxplot을 그리고 중간값을 출력하시오 4.5.2 HW3-2 UScereal 데이터셋은 미국 식료품점의 선반에 진열된 시리얼 제품의 정보에 대한 데이터임. 시리얼 생산 브랜드와 (UScereal\\(mfr) 디스플레이되는 floor 층 수 (UScereal\\)shelf) 관계를 나타내는 테이블을 구해서 tbl 변수에 저장하고 출력하시오 library(MASS) head(UScereal) str(UScereal) ?UScereal UScereal$mfr 브랜드와 진열 층 수와의 관계를 barplot으로 표현하시오 테이블의 각 cell 별 기대값을 구하고 chisqure 값을 구하시오 "]
]
